<?xml version="1.0" encoding="UTF-8"?>
<build-type xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" uuid="5df33f5d-0165-4b72-8ab6-93fa81b36f4c" xsi:noNamespaceSchemaLocation="https://www.jetbrains.com/teamcity/schemas/2021.1/project-config.xsd">
  <name>Build</name>
  <description />
  <settings>
    <disabled-settings>
      <setting-ref ref="simpleRunner" />
    </disabled-settings>
    <parameters />
    <build-runners>
      <runner id="Gradle_build" name="Gradle build" type="gradle-runner">
        <parameters>
          <param name="teamcity.coverage.emma.include.source" value="true" />
          <param name="teamcity.coverage.emma.instr.parameters" value="-ix -*Test*" />
          <param name="teamcity.coverage.idea.includePatterns" value="*" />
          <param name="teamcity.coverage.jacoco.patterns" value="+:*" />
          <param name="teamcity.step.mode" value="default" />
          <param name="teamcity.tool.jacoco" value="%teamcity.tool.jacoco.DEFAULT%" />
          <param name="ui.gradleRUnner.gradle.build.file" value="build.gradle" />
          <param name="ui.gradleRunner.gradle.tasks.names" value="clean build" />
          <param name="ui.gradleRunner.gradle.wrapper.useWrapper" value="true" />
        </parameters>
      </runner>
      <runner id="Docker_build" name="Docker build" type="DockerCommand">
        <parameters>
          <param name="docker.command.type" value="build" />
          <param name="docker.image.namesAndTags" value="ghcr.io/ol2969/test-backend:1.1" />
          <param name="docker.push.remove.image" value="true" />
          <param name="dockerfile.path" value="Dockerfile" />
          <param name="dockerfile.source" value="PATH" />
          <param name="teamcity.step.mode" value="default" />
        </parameters>
      </runner>
      <runner id="Docker_login" name="Docker login" type="simpleRunner">
        <parameters>
          <param name="script.content" value="echo %env.GH_TOKEN% | docker login ghcr.io -u %env.GH_USER% --password-stdin" />
          <param name="teamcity.step.mode" value="default" />
          <param name="use.custom.script" value="true" />
        </parameters>
      </runner>
      <runner id="Docker_push" name="Docker push" type="DockerCommand">
        <parameters>
          <param name="docker.command.type" value="push" />
          <param name="docker.image.namesAndTags" value="ghcr.io/ol2969/test-backend:1.1" />
          <param name="docker.push.remove.image" value="true" />
          <param name="dockerfile.source" value="PATH" />
          <param name="teamcity.step.mode" value="default" />
        </parameters>
      </runner>
      <runner id="simpleRunner" name="Run Postgres" type="simpleRunner">
        <parameters>
          <param name="script.content" value="docker compose -f docker-compose.yml up -d" />
          <param name="teamcity.step.mode" value="default" />
          <param name="use.custom.script" value="true" />
        </parameters>
      </runner>
      <runner id="Apply_specs" name="Run app" type="simpleRunner">
        <parameters>
          <param name="script.content" value="docker run -d --name backend -p 8080:8080 -e SPRING_PROFILES_ACTIVE=docker -e DATABASE_USER=program -e DATABASE_PASSWORD=test -e DATABASE_PORT=5432 -e DATABASE_NAME=todo_list -e DATABASE_URL=postgres --network backend-todo-tfk70_default ghcr.io/ol2969/test-backend:1.1" />
          <param name="teamcity.step.mode" value="default" />
          <param name="use.custom.script" value="true" />
        </parameters>
      </runner>
    </build-runners>
    <vcs-settings>
      <vcs-entry-ref root-id="BackendTodoList_Tfk70backend" />
    </vcs-settings>
    <requirements />
    <build-triggers>
      <build-trigger id="TRIGGER_1" type="vcsTrigger">
        <parameters>
          <param name="branchFilter" value="+:*" />
          <param name="enableQueueOptimization" value="true" />
          <param name="quietPeriodMode" value="DO_NOT_USE" />
        </parameters>
      </build-trigger>
    </build-triggers>
    <build-extensions>
      <extension id="perfmon" type="perfmon">
        <parameters>
          <param name="teamcity.perfmon.feature.enabled" value="true" />
        </parameters>
      </extension>
    </build-extensions>
    <cleanup />
  </settings>
</build-type>

